DOKUMENTACIJA - SISTEM ZA MONITORING EIS PODATAKA BATERIJA
===========================================================

PREGLED SISTEMA
===============
Ovaj sistem implementira monitoring i analizu EIS (Electrochemical Impedance Spectroscopy) podataka 
Li-ion baterija korišćenjem WCF servisa i fajl sistema. 
Sistem se sastoji od tri glavne komponente:

1. CLIENT - čita CSV fajlove sa EIS podacima i šalje ih na server
2. SERVER - prima podatke, validira ih, analizira anomalije i čuva rezultate
3. COMMON - zajedničke biblioteke, ugovori i modeli podataka

ARHITEKTURA SISTEMA
===================
CLIENT ↔ WCF SERVIS ↔ SERVER FAJL SISTEM

- Client čita CSV fajlove iz Dataset/Hioki foldera (Hk_IFR14500_SoC_X_*.csv)
- Šalje podatke preko WCF servisa (net.tcp://localhost:4100/Battery)
- Server prima podatke, validira ih, detektuje anomalije i čuva u fajlove
- Sistem prati EIS parametre (Frequency, R_ohm, X_ohm, V, T_degC, Range_ohm) i računa impedansu Z = √(R² + X²) u realnom vremenu

KAKO POKRENUTI SISTEM
======================

KORAK 1: Otvaranje projekta
---------------------------
1. Otvorite Visual Studio
2. File → Open → Project/Solution
3. Otvorite: Battery.sln

KORAK 2: Pokretanje Servera
---------------------------
1. Desni klik na "Server" projekt u Solution Explorer
2. Set as StartUp Project
3. Pritisnite F5 ili Start
4. Trebalo bi da vidite:
   =========================================
       Li-ion Battery EIS Analysis Service
   =========================================
   Service is running on: net.tcp://localhost:4100
   Waiting for client connections...
   Ready to receive EIS measurements for voltage and impedance analysis
   Press any key to stop the service

KORAK 3: Pokretanje Klijenta
----------------------------
1. Desni klik na "Client" projekt
2. Set as StartUp Project  
3. Pritisnite F5 ili Start
4. Trebalo bi da vidite:
   === Li-ion Battery EIS Data Analysis Client ===
   Choose operation:
   1. Process single EIS file
   2. Auto-discover and process EIS files from dataset
   Enter choice (1-2):

KORAK 4: Korišćenje sistema
---------------------------
1. Unesite "2" za automatsko pronalaženje EIS fajlova
2. Sistem će automatski pronaći Hk_*.csv fajlove u Dataset/Hioki folderu
3. Pratite prenos na oba konzolama
4. Proverite generisane fajlove (korak 5)

KORAK 5: Gde se čuvaju rezultati
--------------------------------
Rezultati se čuvaju u: Server\bin\Debug\BatteryStorage\<BatteryId>\<TestId>\<SoC%>\

STRUKTURA PODATAKA
==================

CSV ULAZ (Hk_IFR14500_SoC_X_*.csv)
----------------------------------
Format: FrequencyHz,R_ohm,X_ohm,V,T_degC,Range_ohm

Primer reda:
1000.000,0.123,-0.045,3.750,25.0,1.000

Glavne kolone koje sistem koristi:
- FrequencyHz (kolona 0): Frekvencija merenja (Hz)
- R_ohm (kolona 1): Realna komponenta impedanse (Ω)
- X_ohm (kolona 2): Imaginarna komponenta impedanse (Ω)
- V (kolona 3): Napon baterije (V)
- T_degC (kolona 4): Temperatura (°C)
- Range_ohm (kolona 5): Opseg merenja (Ω)

DOSTUPNI DATASET FAJLOVI
========================
Dataset\Hioki\ folder sadrži:
1. Hk_IFR14500_SoC_5_04-07-2023_05-13.csv - EIS podaci za 5% SoC
2. Hk_IFR14500_SoC_10_04-07-2023_04-07.csv - EIS podaci za 10% SoC
3. Hk_IFR14500_SoC_15_04-07-2023_03-16.csv - EIS podaci za 15% SoC
4. ... (ukupno 20 fajlova za SoC od 5% do 100% u koracima od 5%)

GENERISANI FAJLOVI
==================

1. session_YYYY-MM-DD_HH-mm-ss.csv - SVI PRIHVAĆENI PODACI
   --------------------------------------------------------
   Lokacija: BatteryStorage\<BatteryId>\<TestId>\<SoC%>\session_YYYY-MM-DD_HH-mm-ss.csv
   Sadrži: Sve validne sample-ove koji su prošli server validaciju
   Format: FrequencyHz,R_ohm,X_ohm,V,T_degC,Range_ohm,RowIndex,Timestamp,Impedance

2. rejects_YYYY-MM-DD_HH-mm-ss.csv - ODBAČENI PODACI NA SERVERU
   -------------------------------------------------------------
   Lokacija: BatteryStorage\<BatteryId>\<TestId>\<SoC%>\rejects_YYYY-MM-DD_HH-mm-ss.csv
   Sadrži: Redove koje je server odbacio zbog nevalidnih podataka
   Razlozi: Invalid frequency, Invalid impedance values, Invalid voltage, Invalid temperature, RowIndex errors
   Format: Reason,RawData

3. analytics_YYYY-MM-DD_HH-mm-ss.csv - ANALITIKA I UPOZORENJA
   -----------------------------------------------------------
   Lokacija: BatteryStorage\<BatteryId>\<TestId>\<SoC%>\analytics_YYYY-MM-DD_HH-mm-ss.csv
   Sadrži: Sva upozorenja i alerti generisane tokom analize
   Format: Timestamp,AlertType,Message,Value,Threshold

4. rejects_client_*.csv - ODBAČENI PODACI NA KLIJENTU
   --------------------------------------------------
   Lokacija: Client\bin\Debug\Dataset\rejects_client_<BatteryId>_<TestId>_<SoC>.csv
   Sadrži: Redove koje klijent nije mogao da parsira
   Razlozi: Header redovi, prazni redovi, neispravne kolone, parse greške
   Format: RowIndex,Reason,RawLine

ANALITIKA I UPOZORENJA
======================

VOLTAGE SPIKE - Nagla promena napona
------------------------------------
Trigger: |ΔV| > VThreshold (default: 0.1V)
Poruka: VOLTAGE SPIKE: ΔV=X.XXXV (IZNAD/ISPOD očekivanog)
Participant: BatteryId, Test: TestId, SoC: X%
Change: ΔV (INCREASE/DECREASE)
Threshold: 0.1V
Before: X.XXXV, After: Y.YYYV

IMPEDANCE JUMP - Nagla promena impedanse
----------------------------------------
Trigger: |ΔZ| > ZThreshold (default: 0.5Ω)
Poruka: IMPEDANCE JUMP: ΔZ=X.XXXΩ (IZNAD/ISPOD očekivanog)
Participant: BatteryId, Test: TestId, SoC: X%
Change: ΔZ (INCREASE/DECREASE)
Threshold: 0.5Ω
Before: X.XXXΩ, After: Y.YYYΩ

OUT OF BAND WARNING - Odstupanje od proseka
-------------------------------------------
Trigger: |Z - RunningMean| > RunningMean * (DeviationPercent/100) (default: ±25%)
Poruka: OUT OF BAND: Impedance=X.XXXΩ (Mean: Y.YYYΩ) (IZNAD/ISPOD očekivane vrednosti)
Participant: BatteryId, Test: TestId, SoC: X%
Parameter: Impedance
Actual Value: X.XXXΩ
Running Mean: Y.YYYΩ
Deviation: ±25%

VALIDACIJA PODATAKA
===================

Server validira svaki sample na osnovu:
--------------------------------------
✓ FrequencyHz je pozitivan broj
✓ R_ohm je konačan broj (nije NaN ili Infinity)
✓ X_ohm je konačan broj (nije NaN ili Infinity)
✓ V je konačan broj (nije NaN ili Infinity)
✓ T_degC je konačan broj
✓ Range_ohm je konačan broj
✓ RowIndex je pozitivan broj

TIPIČNI TOK IZVRŠAVANJA
=======================

1. [SERVER] Pokretanje BatteryService na port 4100
2. [CLIENT] Konekcija na server
3. [CLIENT] Automatsko pronalaženje Hk_*.csv fajlova
4. [CLIENT] StartSession → server kreira folder strukturu
5. [CLIENT] PushSample (red po red) → server validira i čuva
6. [SERVER] Analitika u realnom vremenu → generisanje alerta
7. [CLIENT] EndSession → zatvaranje resursa
8. [REZULTAT] Fajlovi sačuvani u BatteryStorage\<BatteryId>\<TestId>\<SoC%>\

STRUKTURA PROJEKTA
==================

Battery.sln
├── Common (biblioteka)
│   ├── BatteryContracts.cs      # WCF ugovori i interfejsi
│   ├── EisSample.cs            # Model podataka i CSV parser
│   ├── EisFileDiscovery.cs     # Automatsko pronalaženje fajlova
│   ├── EisFileInfo.cs          # Informacije o fajlovima
│   ├── BatteryEventArgs.cs     # Event argumenti
│   ├── CustomException.cs      # Custom greške
│   └── AssemblyInfo.cs         # Assembly informacije
├── Server (EXE)
│   ├── BatteryService.cs       # WCF implementacija
│   ├── BatteryFileStorage.cs   # Fajl storage implementacija
│   ├── Program.cs              # Main server
│   ├── App.config              # Konfiguracija
│   └── Properties\
│       └── AssemblyInfo.cs
├── Client (EXE)
│   ├── Program.cs              # Main klijent
│   ├── EisCsvReader.cs         # CSV parser
│   ├── App.config              # Konfiguracija
│   ├── Dataset\Hioki\          # EIS CSV fajlovi
│   │   ├── Hk_IFR14500_SoC_5_*.csv    # EIS podaci za 5% SoC
│   │   ├── Hk_IFR14500_SoC_10_*.csv   # EIS podaci za 10% SoC
│   │   ├── ... (ukupno 20 fajlova)
│   │   └── Hk_IFR14500_SoC_100_*.csv  # EIS podaci za 100% SoC
│   └── Properties\
│       └── AssemblyInfo.cs
└── bin\Debug\                  # Kompajlirani fajlovi
    ├── Client.exe
    ├── Server.exe
    └── Common.dll




